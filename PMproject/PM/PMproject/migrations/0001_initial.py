# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-03 13:50
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_name', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('likes', models.PositiveIntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=300)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, max_length=255)),
                ('height', models.CharField(choices=[('S', 'Short'), ('A', 'Average'), ('T', 'Tall')], default='?', max_length=1)),
                ('hair_length', models.CharField(choices=[('S', 'Short'), ('A', 'Average'), ('L', 'Long')], default='?', max_length=1)),
                ('hair_color', models.CharField(choices=[('B', 'Black'), ('Bl', 'Blond'), ('Br', 'Brown'), ('Gi', 'Ginger'), ('R', 'Red'), ('Gr', 'Green'), ('W', 'White'), ('Ye', 'Yellow'), ('Pu', 'Purple'), ('Gra', 'Gray'), ('Blu', 'Blue'), ('Mi', 'Mixed'), ('Ot', 'Other')], default='?', max_length=5)),
                ('eye_color', models.CharField(choices=[('Bl', 'Blue'), ('G', 'Green'), ('Br', 'Brown'), ('Gr', 'Gray'), ('P', 'Purple')], default='?', max_length=2)),
                ('body_type', models.CharField(choices=[('S', 'Slim'), ('A', 'Average'), ('T', 'Thick')], default='?', max_length=1)),
                ('skin_tone', models.CharField(choices=[('L', 'Light'), ('B', 'Black'), ('D', 'Dark'), ('O', 'Olive')], default='?', max_length=1)),
                ('experience', models.CharField(choices=[('N', 'About a year or less'), ('A', 'About a 5 years'), ('P', 'About a 10 years or more')], default='?', max_length=1)),
                ('level', models.CharField(choices=[('N', 'Newbie'), ('A', 'Amateur'), ('P', 'Professional')], default='?', max_length=1)),
                ('likes', models.IntegerField(blank=True, null=True)),
                ('conditions', models.CharField(choices=[('T', 'TFP'), ('P', 'Payment')], default='?', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_name', models.CharField(blank=True, max_length=120, null=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('image', sorl.thumbnail.fields.ImageField(default='', upload_to='media')),
                ('likes', models.IntegerField(blank=True, default=0)),
                ('Model', models.ManyToManyField(blank=True, null=True, to='PMproject.Model')),
            ],
        ),
        migrations.CreateModel(
            name='Photograph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, max_length=255)),
                ('experience', models.CharField(choices=[('N', 'About a year or less'), ('A', 'About a 5 years'), ('P', 'About a 10 years or more')], default='?', max_length=1)),
                ('level', models.CharField(choices=[('N', 'Newbie'), ('A', 'Amateur'), ('P', 'Professional')], default='?', max_length=1)),
                ('likes', models.IntegerField(blank=True, null=True)),
                ('conditions', models.CharField(choices=[('T', 'TFP'), ('P', 'Payment')], default='?', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('likes', models.PositiveIntegerField(blank=True, default=0)),
                ('photo', models.ManyToManyField(blank=True, null=True, to='PMproject.Photo')),
            ],
        ),
        migrations.CreateModel(
            name='PMuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='?', max_length=1, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(max_length=100, null=True, verbose_name='city or locality')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, unique=True)),
                ('preferences', models.TextField(blank=True, max_length=255)),
                ('likes', models.IntegerField(blank=True, default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('photo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PMproject.Photo')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='portfolio',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='photograph',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='photo',
            name='Photograph',
            field=models.ManyToManyField(blank=True, null=True, to='PMproject.Photograph'),
        ),
        migrations.AddField(
            model_name='model',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like',
            name='photo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMproject.Photo'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='photo',
            field=models.ManyToManyField(blank=True, null=True, to='PMproject.Photo'),
        ),
        migrations.AddField(
            model_name='album',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
