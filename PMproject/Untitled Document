from django.contrib import admin
from .models import PMuser, Comment, Photograph, Model, Photo
from django.contrib import admin
from sorl.thumbnail.admin import AdminImageMixin
from sorl.thumbnail import get_thumbnail


class usertypefilter(admin.SimpleListFilter):
    title = 'user type'

    parameter_name = 'Type'

    def lookups(self, request, model_admin):
        return (
            ('photograph', ('Photographs')),
            ('model', ('Models')),
        )

    def queryset(self, request, queryset):
        if self.value() == 'photograph':
            return queryset.filter(photograph__username__isnull=False)
        if self.value() == 'model':
            return queryset.filter(model__username__isnull=False)


class ModelInLine(admin.StackedInline):
    model = Model
    extra = 0
    fieldsets = (
        (None, {
            'fields': ('about', ('height', 'hair_color', 'eye_color'),
                       ('body_type', 'skin_tone', 'hair_length'), 'level', 'experience', 'rating', 'likes',
                       ), }),)
    readonly_fields = ('rating', 'likes',)


class PhotographInLine(admin.StackedInline):
    model = Photograph
    extra = 0
    fieldsets = (
        (None, {
            'fields': ('about', ('experience', 'level'), 'rating', 'likes')
        }),
    )
    readonly_fields = ('rating', 'likes',)


class PMuserAdmin(admin.ModelAdmin):
    list_display = ('username', 'email', 'date_joined', 'country', 'number', 'thumb')
    inlines = [ModelInLine, PhotographInLine]
    list_filter = (usertypefilter,)
    fieldsets = (
        (None, {
            'fields': ('photo', ('username', 'password',),
                       "first_name", "last_name",
                       ('gender', 'age',),
                       ('date_joined', 'last_login'),
                       'email', 'country', 'phone_number',
                       'preferences', 'is_staff', "is_active",)
        }),
    )

    def thumb(self, Photo):
        return Photo.thumb()







class ModelAdmin(admin.ModelAdmin):
    list_display = ('username', 'experience', 'level', 'rating', 'likes')
    fieldsets = (
        (None, {
            'fields': ('about', ('height', 'hair_color', 'eye_color'),
                       ('body_type', 'skin_tone', 'hair_length'),
                       'level', 'experience', 'rating', 'likes',
                       ), }),)
    list_filter = ('rating',)
    readonly_fields = ('rating', 'likes',)


class PhotographAdmin(admin.ModelAdmin):
    list_display = ('username', 'experience', 'level', 'rating', 'likes',)
    fieldsets = (
        (None, {
            'fields': ('about', ('experience', 'level'), 'rating', 'likes')
        }),
    )
    list_filter = ('rating',)
    readonly_fields = ('rating', 'likes',)


class CommentInLine(admin.StackedInline):
    model = Comment
    extra = 0


class PhotoAdmin(AdminImageMixin, admin.ModelAdmin):
        list_display = ('photo_name', 'likes', 'thumb')
        inlines = [CommentInLine]




admin.site.register(PMuser, PMuserAdmin)
#admin.site.register(Model, ModelAdmin)
#admin.site.register(Photograph, PhotographAdmin)
#admin.site.register(Comment)
admin.site.register(Photo, PhotoAdmin)

